```js
// App.js
import React, { useState } from 'react';
import { StyleSheet, Text, View, TextInput, TouchableOpacity, ScrollView } from 'react-native';
import axios from 'axios';

const API_URL = 'https://apihub.staging.appply.link/chatgpt';

const App = () => {
  const [housing, setHousing] = useState('');
  const [parties, setParties] = useState('');
  const [goal, setGoal] = useState('');
  const [solution, setSolution] = useState('');
  const [loading, setLoading] = useState(false);

  const generateSolution = async () => {
    setLoading(true);
    try {
      const response = await axios.post(API_URL, {
        messages: [
          { role: "system", content: "You are a legal assistant specialized in housing law. Provide concise legal advice based on the information given." },
          { role: "user", content: `Housing situation: ${housing}\nParties involved: ${parties}\nGoal: ${goal}\nPlease provide a legal solution or advice.` }
        ],
        model: "gpt-4o"
      });
      const { data } = response;
      setSolution(data.response);
    } catch (error) {
      console.error('Error generating solution:', error);
      setSolution('An error occurred while generating the solution. Please try again.');
    }
    setLoading(false);
  };

  return (
    <ScrollView contentContainerStyle={styles.container}>
      <Text style={styles.title}>Libra - Legal Assistant</Text>
      <TextInput
        style={styles.input}
        placeholder="Describe the housing situation"
        value={housing}
        onChangeText={setHousing}
        multiline
      />
      <TextInput
        style={styles.input}
        placeholder="List the parties involved"
        value={parties}
        onChangeText={setParties}
        multiline
      />
      <TextInput
        style={styles.input}
        placeholder="What is your goal?"
        value={goal}
        onChangeText={setGoal}
        multiline
      />
      <TouchableOpacity style={styles.button} onPress={generateSolution} disabled={loading}>
        <Text style={styles.buttonText}>{loading ? 'Generating...' : 'Generate Solution'}</Text>
      </TouchableOpacity>
      {solution ? (
        <View style={styles.solutionContainer}>
          <Text style={styles.solutionTitle}>Legal Solution:</Text>
          <Text style={styles.solutionText}>{solution}</Text>
        </View>
      ) : null}
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  container: {
    flexGrow: 1,
    backgroundColor: '#f0f0f0',
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center',
  },
  input: {
    backgroundColor: 'white',
    borderRadius: 5,
    padding: 10,
    marginBottom: 10,
    minHeight: 100,
    textAlignVertical: 'top',
  },
  button: {
    backgroundColor: '#007AFF',
    padding: 15,
    borderRadius: 5,
    alignItems: 'center',
    marginTop: 10,
  },
  buttonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: 'bold',
  },
  solutionContainer: {
    marginTop: 20,
    backgroundColor: 'white',
    borderRadius: 5,
    padding: 15,
  },
  solutionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  solutionText: {
    fontSize: 16,
  },
});

export default App;
// End of App.js
```